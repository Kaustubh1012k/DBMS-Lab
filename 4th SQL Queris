-- Create the Customer table
CREATE TABLE Customer (
    c_id INT PRIMARY KEY,
    c_name VARCHAR(50),
    email VARCHAR(100),
    city VARCHAR(50),
    pincode VARCHAR(20)
);

-- Create the Order table with a foreign key constraint
CREATE TABLE Order (
    order_id INT PRIMARY KEY,
    date DATE,
    amount DECIMAL(10, 2),
    cust_id INT,
    FOREIGN KEY (cust_id) REFERENCES Customer(c_id)
);

-- Insert 10 records into the Customer table
INSERT INTO Customer (c_id, c_name, email, city, pincode)
VALUES
    (1, 'Customer 1', 'customer1@example.com', 'City 1', '12345'),
    (2, 'Customer 2', 'customer2@example.com', 'City 2', '67890'),
    -- Add 8 more records as needed.

-- Insert 10 records into the Order table
INSERT INTO Order (order_id, date, amount, cust_id)
VALUES
    (101, '2023-11-01', 100.50, 1),
    (102, '2023-11-02', 75.25, 2),
    -- Add 8 more records as needed.

Find all orders placed by customers with cust_id 2:
SELECT * FROM Order WHERE cust_id = 2;


Find the list of customers who placed their orders and details of the orders:
SELECT C.c_id, C.c_name, O.order_id, O.date, O.amount
FROM Customer C
INNER JOIN Order O ON C.c_id = O.cust_id;


List customers who haven't placed orders:
SELECT * FROM Customer
WHERE c_id NOT IN (SELECT cust_id FROM Order);

List all orders and append them to the customer table:
SELECT C.c_id, C.c_name, C.email, C.city, C.pincode, O.order_id, O.date, O.amount
FROM Customer C
INNER JOIN Order O ON C.c_id = O.cust_id;

Display customers who are from the same city:
SELECT C1.c_name AS Customer1, C2.c_name AS Customer2, C1.city
FROM Customer C1
INNER JOIN Customer C2 ON C1.city = C2.city AND C1.c_id < C2.c_id;
